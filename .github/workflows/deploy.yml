name: Build and Deploy

on:
    push:
        branches:
            - main

jobs:
    deploy:
        name: deploy
        runs-on: ubuntu-latest

        steps:
            - name: Setup SSH Key
              run: |
                mkdir -p ~/.ssh
                echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
            
            - name: Install Docker on EC2
              run: |
                ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
                  set -e  # Exit immediately on error
      
                  # Update package list
                  sudo apt update
      
                  # Install Docker if it's not installed
                  if ! command -v docker &> /dev/null; then
                    sudo apt install -y docker.io
                    sudo systemctl start docker
                    sudo systemctl enable docker
                    sudo usermod -aG docker ubuntu
                  fi
                EOF

            - name: Deploy to EC2
              run: |
                ssh ubuntu@${{ secrets.EC2_HOST }} <<- 'EOF'
                  set -e  # Exit immediately on error

                  # Define working directory
                  APP_DIR="/home/ubuntu/app"

                  # Clone repo if not exists, else pull latest changes
                  if [ ! -d "${APP_DIR}/.git" ]; then
                    git clone https://github.com/adelajaOlamilekan/fastapi-book-project.git $APP_DIR
                  fi
                  cd $APP_DIR
                  git pull origin main

                  # Stop and remove old container (if running)
                  docker stop fastapi-book-app || true
                  docker rm fastapi-book-app || true

                  # Build and run the new container
                  docker build -t fastapi-book-app .
                  docker run -d -p 8000:8000 --name fastapi-book-app fastapi-book-app

                  # Restart nginx to apply any config changes
                  sudo systemctl restart nginx
                EOF